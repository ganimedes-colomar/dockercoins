name: CI
env:
        project: dockercoins
        swarm_compose: etc/swarm/manifests/dockercoins.yaml
        kube_compose: etc/kubernetes/manifests/dockercoins.yaml
on:
        push:
                branches:
                -
                        docker
jobs:
        docker:
                runs-on: ubuntu-18.04
                steps:
                -
                        name: checkout
                        uses: actions/checkout@v2
                -
                        name: docker build
                        run: |
                                for app in hasher rng webui worker; do
                                        docker build -t terferre/dockercoins:testing-${app} ${app};
                                done;
                -
                        name: docker network create
                        run: |
                                for app in hasher redis rng webui worker; do
                                        docker network create ${app};
                                done;
                -
                        name: docker run redis
                        run: docker run -d --name redis --network redis -v redis:/data redis;
                -
                        name: docker run
                        run: |
                                for app in hasher rng webui worker; do
                                        docker run -d --name ${app} --network ${app} terferre/dockercoins:testing-${app};
                                done;
                -
                        name: docker network connect redis
                        run: |
                                for app in webui worker; do
                                        docker network connect redis ${app};
                                done;
                -
                        name: docker network connect
                        run: |
                                for network in hasher rng; do
                                        docker network connect ${network} worker;
                                done;
                -
                        name: docker logs hasher
                        run: |
                                while true; do
                                        docker logs hasher 2>&1 \
                                        | grep '== Sinatra .* has taken the stage on .* for development with backup from Thin' \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: docker logs redis
                        run: |
                                while true; do
                                        docker logs redis 2>&1 \
                                        | grep 'Ready to accept connections' \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: docker logs rng
                        run: |
                                while true; do
                                        docker logs rng 2>&1 \
                                        | grep 'Running on' \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: docker logs webui
                        run: |
                                while true; do
                                        docker logs webui 2>&1 \
                                        | grep 'WEBUI running on port' \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: docker logs worker
                        run: |
                                while true; do
                                        docker logs worker 2>&1 \
                                        | grep 'Coin found' \
                                                && break;
                                        sleep 10;
                                done;
        swarm:
                runs-on: ubuntu-18.04
                steps:
                -
                        name: checkout
                        uses: actions/checkout@v2
                -
                        name: docker build
                        run: |
                                for app in hasher rng webui worker; do
                                        docker build -t terferre/dockercoins:testing-${app} ${app}
                                done;
                -
                        name: docker swarm init
                        run: docker swarm init --advertise-addr lo;
                -
                        name: sed
                        run: |
                                sed -i /image:/s/latest/testing/ ${swarm_compose};
                                sed -i /node.role/s/worker/manager/ ${swarm_compose};
                -
                        name: docker stack deploy
                        run: docker stack deploy -c ${swarm_compose} ${project};
                -
                        name: docker service logs hasher
                        run: |
                                while true; do
                                        docker service logs ${project}_hasher 2>&1 \
                                        | grep '== Sinatra .* has taken the stage on .* for development with backup from Thin' \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: docker service logs redis
                        run: |
                                while true; do
                                        docker service logs ${project}_redis 2>&1 \
                                        | grep 'Ready to accept connections' \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: docker service logs rng
                        run: |
                                while true; do
                                        docker service logs ${project}_rng 2>&1 \
                                        | grep 'Running on' \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: docker service logs webui
                        run: |
                                while true; do
                                        docker service logs ${project}_webui 2>&1 \
                                        | grep 'WEBUI running on port' \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: docker service logs worker
                        run: |
                                while true; do
                                        docker service logs ${project}_worker 2>&1 \
                                        | grep 'Coin found' \
                                                && break;
                                        sleep 10;
                                done;
        kubernetes:
                runs-on: ubuntu-18.04
                steps:
                -
                        name: checkout
                        uses: actions/checkout@v2
                -
                        name: docker build
                        run: |
                                for app in hasher rng webui worker; do
                                        docker build -t terferre/dockercoins:testing-${app} ${app};
                                done;
                -
                        name: install kubernetes
                        run: |
                                curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg \
                                | sudo apt-key add -;
                                echo deb http://apt.kubernetes.io/ kubernetes-xenial main \
                                | sudo tee -a /etc/apt/sources.list.d/kubernetes.list \
                                > /dev/null;
                                sudo apt-get update;
                                sudo apt-get install --allow-downgrades \
                                                 kubeadm=1.18.14-00 \
                                                 kubectl=1.18.14-00 \
                                                 kubelet=1.18.14-00 \
                                                 --yes;
                                sudo systemctl enable --now kubelet;
                -
                        name: init kubernetes
                        run: |
                                ip_leader="$(ip r | grep default | awk '{ print $9 }')";
                                echo ${ip_leader} kube-apiserver \
                                | sudo tee -a /etc/hosts \
                                > /dev/null;
                                sudo swapoff --all;
                                sudo kubeadm init --upload-certs --control-plane-endpoint kube-apiserver --pod-network-cidr 192.168.0.0/16 --ignore-preflight-errors all;
                -
                        name: copy credentials
                        run: |
                                sudo install -DT -o $(id -u) -g $(id -g) \
                                                /etc/kubernetes/admin.conf \
                                                ~/.kube/config;
                -
                        name: kubectl apply calico
                        run: kubectl apply -f https://docs.projectcalico.org/v3.17/manifests/calico.yaml;
                -
                        name: kubectl get node
                        run: |
                                while true; do \
                                        kubectl get node \
                                        | grep Ready \
                                        | grep -v NotReady \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: sed
                        run: |
                                sudo sed -i '/kube-apiserver/d' /etc/hosts;
                                sudo sed -i '/127.0.0.1.*localhost/s/$/ kube-apiserver/' /etc/hosts;
                -
                        name: enable master
                        run: |
                                master="$(kubectl get node | grep master | awk '{ print $1 }')";
                                kubectl taint node ${master} node-role.kubernetes.io/master:NoSchedule-;
                -
                        name: sed
                        run: |
                                sed -i '/image:/s/latest/testing/' ${kube_compose};
                                sed -i '/imagePullPolicy/s/Always/Never/' ${kube_compose};
                -
                        name: kubectl apply
                        run: kubectl apply -f ${compose};
                -
                        name: kubectl logs hasher
                        run: |
                                app=hasher;
                                pattern='== Sinatra .* has taken the stage on .* for development with backup from Thin';
                                while true; do
                                        kubectl logs deploy/${app} 2>&1 \
                                        | grep "${pattern}" \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: kubectl logs redis
                        run: |
                                app=redis;
                                pattern='Ready to accept connections';
                                while true; do
                                        kubectl logs deploy/${app} 2>&1 \
                                        | grep "${pattern}" \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: kubectl logs rng
                        run: |
                                app=rng;
                                pattern='Running on';
                                while true; do
                                        kubectl logs ds/${app} 2>&1 \
                                        | grep "${pattern}" \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: kubectl logs webui
                        run: |
                                app=webui;
                                pattern='WEBUI running on port';
                                while true; do
                                        kubectl logs deploy/${app} 2>&1 \
                                        | grep "${pattern}" \
                                                && break;
                                        sleep 10;
                                done;
                -
                        name: kubectl logs worker
                        run: |
                                app=worker;
                                pattern='Coin found';
                                while true; do
                                        kubectl logs deploy/${app} 2>&1 \
                                        | grep "${pattern}" \
                                                && break;
                                        sleep 10;
                                done;
